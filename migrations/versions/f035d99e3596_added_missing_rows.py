"""added missing rows

Revision ID: f035d99e3596
Revises: 
Create Date: 2020-07-29 16:29:06.822285

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f035d99e3596'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_table('cell_lines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('running_number', sa.String(length=128), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('celltype', sa.String(length=128), nullable=True),
    sa.Column('species', sa.String(length=128), nullable=True),
    sa.Column('tissue', sa.String(length=128), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cell_lines_celltype'), 'cell_lines', ['celltype'], unique=True)
    op.create_index(op.f('ix_cell_lines_running_number'), 'cell_lines', ['running_number'], unique=True)
    op.create_index(op.f('ix_cell_lines_species'), 'cell_lines', ['species'], unique=False)
    op.create_index(op.f('ix_cell_lines_timestamp'), 'cell_lines', ['timestamp'], unique=False)
    op.create_index(op.f('ix_cell_lines_tissue'), 'cell_lines', ['tissue'], unique=False)
    op.create_table('cell_culture',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cell_line_id', sa.Integer(), nullable=True),
    sa.Column('bsl', sa.Integer(), nullable=True),
    sa.Column('mycoplasma', sa.String(length=128), nullable=True),
    sa.Column('pcrdate', sa.DateTime(), nullable=True),
    sa.Column('culturetype', sa.String(length=128), nullable=True),
    sa.Column('medium', sa.String(length=128), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['cell_line_id'], ['cell_lines.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cell_culture_bsl'), 'cell_culture', ['bsl'], unique=False)
    op.create_index(op.f('ix_cell_culture_culturetype'), 'cell_culture', ['culturetype'], unique=False)
    op.create_index(op.f('ix_cell_culture_medium'), 'cell_culture', ['medium'], unique=False)
    op.create_index(op.f('ix_cell_culture_mycoplasma'), 'cell_culture', ['mycoplasma'], unique=False)
    op.create_index(op.f('ix_cell_culture_notes'), 'cell_culture', ['notes'], unique=False)
    op.create_index(op.f('ix_cell_culture_pcrdate'), 'cell_culture', ['pcrdate'], unique=False)
    op.create_table('cell_line_generation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cell_line_id', sa.Integer(), nullable=True),
    sa.Column('protocol', sa.Text(), nullable=True),
    sa.Column('wb', sa.String(length=128), nullable=True),
    sa.Column('pcr', sa.DateTime(), nullable=True),
    sa.Column('sequencing_info', sa.String(length=128), nullable=True),
    sa.Column('facs', sa.String(length=128), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('comments', sa.Text(), nullable=True),
    sa.Column('publication', sa.String(length=128), nullable=True),
    sa.ForeignKeyConstraint(['cell_line_id'], ['cell_lines.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cell_line_generation_comments'), 'cell_line_generation', ['comments'], unique=False)
    op.create_index(op.f('ix_cell_line_generation_description'), 'cell_line_generation', ['description'], unique=False)
    op.create_index(op.f('ix_cell_line_generation_facs'), 'cell_line_generation', ['facs'], unique=True)
    op.create_index(op.f('ix_cell_line_generation_pcr'), 'cell_line_generation', ['pcr'], unique=True)
    op.create_index(op.f('ix_cell_line_generation_protocol'), 'cell_line_generation', ['protocol'], unique=False)
    op.create_index(op.f('ix_cell_line_generation_publication'), 'cell_line_generation', ['publication'], unique=False)
    op.create_index(op.f('ix_cell_line_generation_sequencing_info'), 'cell_line_generation', ['sequencing_info'], unique=True)
    op.create_index(op.f('ix_cell_line_generation_wb'), 'cell_line_generation', ['wb'], unique=True)
    op.create_table('genotype',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cell_line_id', sa.Integer(), nullable=True),
    sa.Column('modmethod', sa.String(length=128), nullable=True),
    sa.Column('locus', sa.String(length=128), nullable=True),
    sa.Column('tag', sa.String(length=128), nullable=True),
    sa.Column('modtype', sa.String(length=128), nullable=True),
    sa.Column('mutation', sa.String(length=128), nullable=True),
    sa.Column('transgene', sa.String(length=128), nullable=True),
    sa.Column('resistance', sa.String(length=128), nullable=True),
    sa.Column('inducible', sa.String(length=128), nullable=True),
    sa.ForeignKeyConstraint(['cell_line_id'], ['cell_lines.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_genotype_inducible'), 'genotype', ['inducible'], unique=False)
    op.create_index(op.f('ix_genotype_locus'), 'genotype', ['locus'], unique=False)
    op.create_index(op.f('ix_genotype_modmethod'), 'genotype', ['modmethod'], unique=False)
    op.create_index(op.f('ix_genotype_modtype'), 'genotype', ['modtype'], unique=False)
    op.create_index(op.f('ix_genotype_mutation'), 'genotype', ['mutation'], unique=False)
    op.create_index(op.f('ix_genotype_resistance'), 'genotype', ['resistance'], unique=False)
    op.create_index(op.f('ix_genotype_tag'), 'genotype', ['tag'], unique=False)
    op.create_index(op.f('ix_genotype_transgene'), 'genotype', ['transgene'], unique=False)
    op.create_table('stocks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cell_line_id', sa.Integer(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('freezer', sa.String(length=128), nullable=True),
    sa.Column('rack', sa.String(length=128), nullable=True),
    sa.Column('box', sa.String(length=128), nullable=True),
    sa.Column('position', sa.String(length=128), nullable=True),
    sa.Column('medium', sa.String(length=128), nullable=True),
    sa.Column('passage', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cell_line_id'], ['cell_lines.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_stocks_box'), 'stocks', ['box'], unique=False)
    op.create_index(op.f('ix_stocks_date'), 'stocks', ['date'], unique=False)
    op.create_index(op.f('ix_stocks_freezer'), 'stocks', ['freezer'], unique=False)
    op.create_index(op.f('ix_stocks_medium'), 'stocks', ['medium'], unique=False)
    op.create_index(op.f('ix_stocks_passage'), 'stocks', ['passage'], unique=False)
    op.create_index(op.f('ix_stocks_position'), 'stocks', ['position'], unique=False)
    op.create_index(op.f('ix_stocks_rack'), 'stocks', ['rack'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_stocks_rack'), table_name='stocks')
    op.drop_index(op.f('ix_stocks_position'), table_name='stocks')
    op.drop_index(op.f('ix_stocks_passage'), table_name='stocks')
    op.drop_index(op.f('ix_stocks_medium'), table_name='stocks')
    op.drop_index(op.f('ix_stocks_freezer'), table_name='stocks')
    op.drop_index(op.f('ix_stocks_date'), table_name='stocks')
    op.drop_index(op.f('ix_stocks_box'), table_name='stocks')
    op.drop_table('stocks')
    op.drop_index(op.f('ix_genotype_transgene'), table_name='genotype')
    op.drop_index(op.f('ix_genotype_tag'), table_name='genotype')
    op.drop_index(op.f('ix_genotype_resistance'), table_name='genotype')
    op.drop_index(op.f('ix_genotype_mutation'), table_name='genotype')
    op.drop_index(op.f('ix_genotype_modtype'), table_name='genotype')
    op.drop_index(op.f('ix_genotype_modmethod'), table_name='genotype')
    op.drop_index(op.f('ix_genotype_locus'), table_name='genotype')
    op.drop_index(op.f('ix_genotype_inducible'), table_name='genotype')
    op.drop_table('genotype')
    op.drop_index(op.f('ix_cell_line_generation_wb'), table_name='cell_line_generation')
    op.drop_index(op.f('ix_cell_line_generation_sequencing_info'), table_name='cell_line_generation')
    op.drop_index(op.f('ix_cell_line_generation_publication'), table_name='cell_line_generation')
    op.drop_index(op.f('ix_cell_line_generation_protocol'), table_name='cell_line_generation')
    op.drop_index(op.f('ix_cell_line_generation_pcr'), table_name='cell_line_generation')
    op.drop_index(op.f('ix_cell_line_generation_facs'), table_name='cell_line_generation')
    op.drop_index(op.f('ix_cell_line_generation_description'), table_name='cell_line_generation')
    op.drop_index(op.f('ix_cell_line_generation_comments'), table_name='cell_line_generation')
    op.drop_table('cell_line_generation')
    op.drop_index(op.f('ix_cell_culture_pcrdate'), table_name='cell_culture')
    op.drop_index(op.f('ix_cell_culture_notes'), table_name='cell_culture')
    op.drop_index(op.f('ix_cell_culture_mycoplasma'), table_name='cell_culture')
    op.drop_index(op.f('ix_cell_culture_medium'), table_name='cell_culture')
    op.drop_index(op.f('ix_cell_culture_culturetype'), table_name='cell_culture')
    op.drop_index(op.f('ix_cell_culture_bsl'), table_name='cell_culture')
    op.drop_table('cell_culture')
    op.drop_index(op.f('ix_cell_lines_tissue'), table_name='cell_lines')
    op.drop_index(op.f('ix_cell_lines_timestamp'), table_name='cell_lines')
    op.drop_index(op.f('ix_cell_lines_species'), table_name='cell_lines')
    op.drop_index(op.f('ix_cell_lines_running_number'), table_name='cell_lines')
    op.drop_index(op.f('ix_cell_lines_celltype'), table_name='cell_lines')
    op.drop_table('cell_lines')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ###
